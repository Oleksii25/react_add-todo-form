{"version":3,"sources":["api/users.js","api/todos.js","components/Todo.jsx","components/TodoList.jsx","components/InputForTitle.jsx","components/AddButton.jsx","components/Option.jsx","components/SelectUser.jsx","components/TodoForm.jsx","App.js","index.js"],"names":["users","id","name","username","email","address","street","suite","city","zipcode","geo","lat","lng","phone","website","company","catchPhrase","bs","todos","userId","title","completed","Todo","userName","state","className","TodoList","map","todo","key","InputForTitle","onChange","value","inputValidation","type","maxLength","placeholder","AddButton","Option","Select","selectValidation","names","TodoForm","todoTitle","newTodo","changeTodoTitle","event","setState","target","replace","length","changeUserName","makeNewTodo","preventDefault","prevState","props","addTodo","this","onSubmit","React","Component","todosWithUsersName","find","user","userNames","App","addNewTodo","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.174f9ae0.chunk.js","sourcesContent":["const users = [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n    address: {\n      street: 'Kulas Light',\n      suite: 'Apt. 556',\n      city: 'Gwenborough',\n      zipcode: '92998-3874',\n      geo: {\n        lat: '-37.3159',\n        lng: '81.1496',\n      },\n    },\n    phone: '1-770-736-8031 x56442',\n    website: 'hildegard.org',\n    company: {\n      name: 'Romaguera-Crona',\n      catchPhrase: 'Multi-layered client-server neural-net',\n      bs: 'harness real-time e-markets',\n    },\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n    address: {\n      street: 'Victor Plains',\n      suite: 'Suite 879',\n      city: 'Wisokyburgh',\n      zipcode: '90566-7771',\n      geo: {\n        lat: '-43.9509',\n        lng: '-34.4618',\n      },\n    },\n    phone: '010-692-6593 x09125',\n    website: 'anastasia.net',\n    company: {\n      name: 'Deckow-Crist',\n      catchPhrase: 'Proactive didactic contingency',\n      bs: 'synergize scalable supply-chains',\n    },\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n    address: {\n      street: 'Douglas Extension',\n      suite: 'Suite 847',\n      city: 'McKenziehaven',\n      zipcode: '59590-4157',\n      geo: {\n        lat: '-68.6102',\n        lng: '-47.0653',\n      },\n    },\n    phone: '1-463-123-4447',\n    website: 'ramiro.info',\n    company: {\n      name: 'Romaguera-Jacobson',\n      catchPhrase: 'Face to face bifurcated interface',\n      bs: 'e-enable strategic applications',\n    },\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n    address: {\n      street: 'Hoeger Mall',\n      suite: 'Apt. 692',\n      city: 'South Elvis',\n      zipcode: '53919-4257',\n      geo: {\n        lat: '29.4572',\n        lng: '-164.2990',\n      },\n    },\n    phone: '493-170-9623 x156',\n    website: 'kale.biz',\n    company: {\n      name: 'Robel-Corkery',\n      catchPhrase: 'Multi-tiered zero tolerance productivity',\n      bs: 'transition cutting-edge web services',\n    },\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n    address: {\n      street: 'Skiles Walks',\n      suite: 'Suite 351',\n      city: 'Roscoeview',\n      zipcode: '33263',\n      geo: {\n        lat: '-31.8129',\n        lng: '62.5342',\n      },\n    },\n    phone: '(254)954-1289',\n    website: 'demarco.info',\n    company: {\n      name: 'Keebler LLC',\n      catchPhrase: 'User-centric fault-tolerant solution',\n      bs: 'revolutionize end-to-end systems',\n    },\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n    address: {\n      street: 'Norberto Crossing',\n      suite: 'Apt. 950',\n      city: 'South Christy',\n      zipcode: '23505-1337',\n      geo: {\n        lat: '-71.4197',\n        lng: '71.7478',\n      },\n    },\n    phone: '1-477-935-8478 x6430',\n    website: 'ola.org',\n    company: {\n      name: 'Considine-Lockman',\n      catchPhrase: 'Synchronised bottom-line interface',\n      bs: 'e-enable innovative applications',\n    },\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n    address: {\n      street: 'Rex Trail',\n      suite: 'Suite 280',\n      city: 'Howemouth',\n      zipcode: '58804-1099',\n      geo: {\n        lat: '24.8918',\n        lng: '21.8984',\n      },\n    },\n    phone: '210.067.6132',\n    website: 'elvis.io',\n    company: {\n      name: 'Johns Group',\n      catchPhrase: 'Configurable multimedia task-force',\n      bs: 'generate enterprise e-tailers',\n    },\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n    address: {\n      street: 'Ellsworth Summit',\n      suite: 'Suite 729',\n      city: 'Aliyaview',\n      zipcode: '45169',\n      geo: {\n        lat: '-14.3990',\n        lng: '-120.7677',\n      },\n    },\n    phone: '586.493.6943 x140',\n    website: 'jacynthe.com',\n    company: {\n      name: 'Abernathy Group',\n      catchPhrase: 'Implemented secondary concept',\n      bs: 'e-enable extensible e-tailers',\n    },\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n    address: {\n      street: 'Dayna Park',\n      suite: 'Suite 449',\n      city: 'Bartholomebury',\n      zipcode: '76495-3109',\n      geo: {\n        lat: '24.6463',\n        lng: '-168.8889',\n      },\n    },\n    phone: '(775)976-6794 x41206',\n    website: 'conrad.com',\n    company: {\n      name: 'Yost and Sons',\n      catchPhrase: 'Switchable contextually-based project',\n      bs: 'aggregate real-time technologies',\n    },\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n    address: {\n      street: 'Kattie Turnpike',\n      suite: 'Suite 198',\n      city: 'Lebsackbury',\n      zipcode: '31428-2261',\n      geo: {\n        lat: '-38.2386',\n        lng: '57.2232',\n      },\n    },\n    phone: '024-648-3804',\n    website: 'ambrose.net',\n    company: {\n      name: 'Hoeger LLC',\n      catchPhrase: 'Centralized empowering task-force',\n      bs: 'target end-to-end models',\n    },\n  },\n];\n\nexport default users;\n","/* eslint-disable max-len */\n\nconst todos = [\n  {\n    userId: 1,\n    id: 1,\n    title: 'delectus aut autem',\n    completed: false,\n  },\n  {\n    userId: 1,\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n  },\n];\n\nexport default todos;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './Todo.css';\n\nexport const Todo = ({\n  userName,\n  title,\n  state,\n}) => (\n  <>\n    <p>\n      {title}\n    </p>\n    <p>\n      <strong>Status: </strong>\n      {state ? 'Completed' : 'Not completed yet'}\n    </p>\n    <p className=\"user\">\n      {userName}\n    </p>\n  </>\n\n);\n\nTodo.propTypes = {\n  userName: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  state: PropTypes.bool.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Todo } from './Todo';\n\nexport const TodoList = ({ todos }) => (\n  <ul>\n    {todos.map(todo => (\n      <Todo\n        key={todo.id}\n        userName={todo.name}\n        title={todo.title}\n        state={todo.completed}\n      />\n    ))}\n  </ul>\n);\n\nTodoList.propTypes = PropTypes.arrayOf(PropTypes.shape({\n  name: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  completed: PropTypes.bool.isRequired,\n  id: PropTypes.number.isRequired,\n  userId: PropTypes.number.isRequired,\n}).isRequired).isRequired;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport const InputForTitle = ({ onChange, value, inputValidation }) => (\n  <label>\n    <strong>\n      Title:\n    </strong>\n    <input\n      type=\"text\"\n      maxLength=\"40\"\n      name=\"todoTitle\"\n      placeholder=\"only English\"\n      onChange={onChange}\n      value={value}\n    />\n    { inputValidation\n    && <strong>\n      Please enter the title\n    </strong>\n    }\n  </label>\n);\n\nInputForTitle.propTypes = {\n  onChange: PropTypes.func.isRequired,\n  value: PropTypes.string.isRequired,\n}\n","import React from 'react';\n\nexport const AddButton = () => (\n  <button\n    type=\"submit\"\n    name=\"addButton\"\n  >\n    Add todo\n  </button>\n);\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport const Option = ({ name }) => (\n  <option\n    value={name}\n  >\n    {name}\n  </option>\n);\n\nOption.propTypes = {\n  name: PropTypes.string.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Option } from './Option';\n\nexport const Select = ({\n  onChange,\n  value,\n  selectValidation,\n  names\n}) => (\n  <>\n    <select\n      name=\"userNames\"\n      onChange={onChange}\n      value={value}\n    >\n      {['Select user', ...names].map(name => (\n        <Option\n          name={name}\n          key={name}\n        />\n      ))}\n    </select>\n    {selectValidation \n      && <strong>\n        Please choose a user\n      </strong>}\n  </>\n\n);\n\nSelect.propTypes = {\n  onChange: PropTypes.func.isRequired,\n  value: PropTypes.string.isRequired,\n  selectValidation: PropTypes.bool.isRequired,\n  names:PropTypes.arrayOf(PropTypes.string.isRequired).isRequired\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { InputForTitle } from './InputForTitle';\nimport { AddButton } from './AddButton';\nimport { Select } from './SelectUser';\nimport './FormToAddTodo.css';\n\nexport default class TodoForm extends React.Component {\n  state = {\n    todoTitle: '',\n    userName: '',\n    inputValidation: false,\n    selectValidation: false,\n    userId: 0,\n    newTodo: null,\n  }\n\n  changeTodoTitle = event => this.setState({\n    todoTitle: event.target.value.replace(/[^\\w\\s]/g, ''),\n    inputValidation: (event.target.value.length < 0),\n  })\n  \n  changeUserName = event => this.setState({\n    userName: event.target.value,\n    selectValidation: (event.target.value.length < 0),\n  })\n\n  makeNewTodo = (event) => {\n    event.preventDefault();\n\n    if(this.state.userName && this.state.todoTitle) { \n\n      this.setState(prevState => ({\n        todoTitle: '',\n        userName: '',\n        inputValidation: false,\n        selectValidation: false,\n        newTodo: {\n          name: prevState.userName,\n          title: prevState.todoTitle,\n          completed: false,\n          userId: prevState.userId,\n          id: this.props.todos + 1,\n        },\n      }),\n      () => this.props.addTodo(this.state.newTodo));\n    }\n  \n    if(!this.state.userName) {\n      this.setState({\n        selectValidation: true,\n      });\n    }\n  \n    if(!this.state.todoTitle) {\n      this.setState({\n        inputValidation: true,\n      });\n    }\n  }\n\n  render() {\n    const {\n      todoTitle,\n      userName,\n      inputValidation,\n      selectValidation,\n    } = this.state\n\n    return (\n      <form\n        className=\"add-form\"\n        onSubmit={this.makeNewTodo}\n      >\n        <InputForTitle\n          onChange={this.changeTodoTitle}\n          value={todoTitle}\n          inputValidation={inputValidation}\n        />\n        <Select\n          names={this.props.names}\n          value={userName}\n          onChange={this.changeUserName}\n          selectValidation={selectValidation}\n        />\n        <AddButton />\n      </form>\n    );\n  }\n}\n\nTodoForm.propTypes = {\n  addTodo: PropTypes.func.isRequired,\n  names: PropTypes.arrayOf(PropTypes.string.isRequired).isRequired,\n};\n","import React, { Component } from 'react';\nimport './App.css';\nimport users from './api/users';\nimport todos from './api/todos';\nimport { TodoList } from './components/TodoList';\nimport TodoForm from './components/TodoForm';\n\nconst todosWithUsersName = todos.map((todo) => {\n  const userName = users.find(user => user.id === todo.userId).name;\n  const copyTodo = {\n    ...todo,\n    name: userName,\n  };\n\n  return copyTodo;\n});\n\nconst userNames = users.map(user => user.name);\n\nclass App extends Component {\n  state = {\n    todos: todosWithUsersName,\n  }\n\naddNewTodo = newTodo => this.setState(state => ({\n  todos: [...state.todos,\n    {\n      ...newTodo,\n      id: state.todos.length + 1,\n    }],\n}));\n\nrender() {\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n      <p>\n        <span>Users: </span>\n        {users.length}\n      </p>\n      <TodoList\n        todos={this.state.todos}\n      />\n      <TodoForm\n        names={userNames}\n        addTodo={this.addNewTodo}\n      />\n    </div>\n  );\n}\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}