{"version":3,"sources":["api/users.js","api/todos.js","components/Todo.jsx","components/TodoList.jsx","components/InputForTitle.jsx","components/AddButton.jsx","components/Option.jsx","components/SelectUser.jsx","components/FormToAddTodo.jsx","App.js","index.js"],"names":["users","id","name","username","email","address","street","suite","city","zipcode","geo","lat","lng","phone","website","company","catchPhrase","bs","todos","userId","title","completed","Todo","userName","todoTitle","todoState","className","TodoList","map","todo","key","InputForTitle","onChange","value","type","maxLength","required","placeholder","AddButton","Option","SelectUser","namesForOptions","valueForSelect","FormToAddTodo","onSubmit","onChangeForInput","onChangeForSelect","valueForInput","todosWithUsersName","find","user","namesForSelect","App","state","changeTodoTitle","event","setState","target","replace","changeUserNameAndUserId","indexOf","makeNewTodo","preventDefault","newTodo","length","concat","this","Component","ReactDOM","render","document","getElementById"],"mappings":"+SAyOeA,G,MAzOD,CACZ,CACEC,GAAI,EACJC,KAAM,gBACNC,SAAU,OACVC,MAAO,oBACPC,QAAS,CACPC,OAAQ,cACRC,MAAO,WACPC,KAAM,cACNC,QAAS,aACTC,IAAK,CACHC,IAAK,WACLC,IAAK,YAGTC,MAAO,wBACPC,QAAS,gBACTC,QAAS,CACPb,KAAM,kBACNc,YAAa,yCACbC,GAAI,gCAGR,CACEhB,GAAI,EACJC,KAAM,eACNC,SAAU,YACVC,MAAO,oBACPC,QAAS,CACPC,OAAQ,gBACRC,MAAO,YACPC,KAAM,cACNC,QAAS,aACTC,IAAK,CACHC,IAAK,WACLC,IAAK,aAGTC,MAAO,sBACPC,QAAS,gBACTC,QAAS,CACPb,KAAM,eACNc,YAAa,iCACbC,GAAI,qCAGR,CACEhB,GAAI,EACJC,KAAM,mBACNC,SAAU,WACVC,MAAO,qBACPC,QAAS,CACPC,OAAQ,oBACRC,MAAO,YACPC,KAAM,gBACNC,QAAS,aACTC,IAAK,CACHC,IAAK,WACLC,IAAK,aAGTC,MAAO,iBACPC,QAAS,cACTC,QAAS,CACPb,KAAM,qBACNc,YAAa,oCACbC,GAAI,oCAGR,CACEhB,GAAI,EACJC,KAAM,mBACNC,SAAU,WACVC,MAAO,4BACPC,QAAS,CACPC,OAAQ,cACRC,MAAO,WACPC,KAAM,cACNC,QAAS,aACTC,IAAK,CACHC,IAAK,UACLC,IAAK,cAGTC,MAAO,oBACPC,QAAS,WACTC,QAAS,CACPb,KAAM,gBACNc,YAAa,2CACbC,GAAI,yCAGR,CACEhB,GAAI,EACJC,KAAM,mBACNC,SAAU,SACVC,MAAO,2BACPC,QAAS,CACPC,OAAQ,eACRC,MAAO,YACPC,KAAM,aACNC,QAAS,QACTC,IAAK,CACHC,IAAK,WACLC,IAAK,YAGTC,MAAO,gBACPC,QAAS,eACTC,QAAS,CACPb,KAAM,cACNc,YAAa,uCACbC,GAAI,qCAGR,CACEhB,GAAI,EACJC,KAAM,uBACNC,SAAU,mBACVC,MAAO,0BACPC,QAAS,CACPC,OAAQ,oBACRC,MAAO,WACPC,KAAM,gBACNC,QAAS,aACTC,IAAK,CACHC,IAAK,WACLC,IAAK,YAGTC,MAAO,uBACPC,QAAS,UACTC,QAAS,CACPb,KAAM,oBACNc,YAAa,qCACbC,GAAI,qCAGR,CACEhB,GAAI,EACJC,KAAM,kBACNC,SAAU,eACVC,MAAO,yBACPC,QAAS,CACPC,OAAQ,YACRC,MAAO,YACPC,KAAM,YACNC,QAAS,aACTC,IAAK,CACHC,IAAK,UACLC,IAAK,YAGTC,MAAO,eACPC,QAAS,WACTC,QAAS,CACPb,KAAM,cACNc,YAAa,qCACbC,GAAI,kCAGR,CACEhB,GAAI,EACJC,KAAM,2BACNC,SAAU,gBACVC,MAAO,uBACPC,QAAS,CACPC,OAAQ,mBACRC,MAAO,YACPC,KAAM,YACNC,QAAS,QACTC,IAAK,CACHC,IAAK,WACLC,IAAK,cAGTC,MAAO,oBACPC,QAAS,eACTC,QAAS,CACPb,KAAM,kBACNc,YAAa,gCACbC,GAAI,kCAGR,CACEhB,GAAI,EACJC,KAAM,kBACNC,SAAU,WACVC,MAAO,0BACPC,QAAS,CACPC,OAAQ,aACRC,MAAO,YACPC,KAAM,iBACNC,QAAS,aACTC,IAAK,CACHC,IAAK,UACLC,IAAK,cAGTC,MAAO,uBACPC,QAAS,aACTC,QAAS,CACPb,KAAM,gBACNc,YAAa,wCACbC,GAAI,qCAGR,CACEhB,GAAI,GACJC,KAAM,qBACNC,SAAU,iBACVC,MAAO,yBACPC,QAAS,CACPC,OAAQ,kBACRC,MAAO,YACPC,KAAM,cACNC,QAAS,aACTC,IAAK,CACHC,IAAK,WACLC,IAAK,YAGTC,MAAO,eACPC,QAAS,cACTC,QAAS,CACPb,KAAM,aACNc,YAAa,oCACbC,GAAI,+BCnNKC,EAfD,CACZ,CACEC,OAAQ,EACRlB,GAAI,EACJmB,MAAO,qBACPC,WAAW,GAEb,CACEF,OAAQ,EACRlB,GAAI,EACJmB,MAAO,qCACPC,WAAW,ICTFC,G,MAAO,SAAC,GAId,IAHLC,EAGI,EAHJA,SACAC,EAEI,EAFJA,UACAC,EACI,EADJA,UAEA,OACE,oCACE,2BACGD,GAEH,2BACE,4CACCC,EAAY,YAAc,qBAE7B,uBAAGC,UAAU,QACVH,MCfII,EAAW,SAAC,GAAe,IAAbT,EAAY,EAAZA,MACzB,OACA,4BACGA,EAAMU,KAAI,SAAAC,GAAI,OACb,kBAAC,EAAD,CACEC,IAAKD,EAAK5B,GACVsB,SAAUM,EAAK3B,KACfsB,UAAWK,EAAKT,MAChBK,UAAWI,EAAKR,iBCVXU,EAAgB,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAUC,EAAb,EAAaA,MAAb,OAC3B,+BACE,0CAGA,2BACEC,KAAK,OACLC,UAAU,KACVC,UAAQ,EACRlC,KAAK,YACLmC,YAAY,QACZL,SAAUA,EACVC,MAAOA,MCZAK,EAAY,kBACvB,4BACEJ,KAAK,SACLhC,KAAK,aAFP,aCAWqC,EAAS,SAAC,GAAD,IAAGrC,EAAH,EAAGA,KAAH,OACpB,4BACE+B,MAAO/B,GAENA,ICHQsC,EAAa,SAAC,GAAD,IACxBC,EADwB,EACxBA,gBACAT,EAFwB,EAExBA,SACAU,EAHwB,EAGxBA,eAHwB,OAKxB,4BAEExC,KAAK,YACLkC,UAAQ,EACRJ,SAAUA,EACVC,MAAOS,GAEP,4BACET,MAAM,IADR,eAKCQ,EAAgBb,KAAI,SAAA1B,GAAI,OACvB,kBAAC,EAAD,CACAA,KAAMA,EACN4B,IAAK5B,SCjBEyC,G,MAAgB,SAAC,GAAD,IAC3BC,EAD2B,EAC3BA,SACAC,EAF2B,EAE3BA,iBACAC,EAH2B,EAG3BA,kBACAL,EAJ2B,EAI3BA,gBACAM,EAL2B,EAK3BA,cACAL,EAN2B,EAM3BA,eAN2B,OAQ3B,0BACEhB,UAAU,WACVkB,SAAUA,GAEV,kBAAC,EAAD,CACEZ,SAAUa,EACVZ,MAAOc,IAET,kBAAC,EAAD,CACEL,eAAgBA,EAChBD,gBAAiBA,EACjBT,SAAUc,IAEZ,kBAAC,EAAD,SCrBEE,EAAqB9B,EAAMU,KAAI,SAAAC,GACnC,IAAMN,EAAWvB,EAAMiD,MAAK,SAAAC,GAAI,OAAIA,EAAKjD,KAAO4B,EAAKV,UAAQjB,KAK7D,OAJc,2BACT2B,GADS,IAEZ3B,KAAMqB,OAKJ4B,EAAiBnD,EAAM4B,KAAI,SAAAsB,GAAI,OAAIA,EAAKhD,QA8D/BkD,E,4MA3DbC,MAAQ,CACNnC,MAAO8B,EACPxB,UAAU,GACVD,SAAU,I,EAGd+B,gBAAkB,SAAAC,GAAK,OAAI,EAAKC,SAAS,CACvChC,UAAW+B,EAAME,OAAOxB,MAAMyB,QAAQ,SAAS,O,EAGjDC,wBAA0B,SAAAJ,GAAK,OAAI,EAAKC,SAAS,CAC/CjC,SAAUgC,EAAME,OAAOxB,MACvBd,OAASgC,EAAeS,QAAQL,EAAME,OAAOxB,OAAS,K,EAGxD4B,YAAc,SAACN,GACbA,EAAMO,iBAEN,IAAMC,EAAU,CACd7D,KAAM,EAAKmD,MAAM9B,SACjBH,MAAO,EAAKiC,MAAM7B,UAClBH,WAAW,EACXF,OAAQ,EAAKkC,MAAMlC,OACnBlB,GAAI,EAAKoD,MAAMnC,MAAM8C,QAGvB,EAAKR,UAAS,SAAAH,GAAK,MAAK,CACtBnC,MAAOmC,EAAMnC,MAAM+C,OAAOF,GAC1BvC,UAAW,GACXD,SAAU,Q,4CAIZ,WACE,MAAuC2C,KAAKb,MAApC7B,EAAR,EAAQA,UAAWN,EAAnB,EAAmBA,MAAOK,EAA1B,EAA0BA,SAE1B,OACE,yBAAKG,UAAU,OACb,6CACA,2BACE,yCACC1B,EAAMgE,QAET,kBAAC,EAAD,CACE9C,MAAOA,IAET,kBAAC,EAAD,CACE0B,SAAUsB,KAAKL,YACfhB,iBAAkBqB,KAAKZ,gBACvBR,kBAAmBoB,KAAKP,wBACxBlB,gBAAiBU,EACjBJ,cAAevB,EACfkB,eAAgBnB,S,GArDR4C,aCdlBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.ff3e4c02.chunk.js","sourcesContent":["const users = [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n    address: {\n      street: 'Kulas Light',\n      suite: 'Apt. 556',\n      city: 'Gwenborough',\n      zipcode: '92998-3874',\n      geo: {\n        lat: '-37.3159',\n        lng: '81.1496',\n      },\n    },\n    phone: '1-770-736-8031 x56442',\n    website: 'hildegard.org',\n    company: {\n      name: 'Romaguera-Crona',\n      catchPhrase: 'Multi-layered client-server neural-net',\n      bs: 'harness real-time e-markets',\n    },\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n    address: {\n      street: 'Victor Plains',\n      suite: 'Suite 879',\n      city: 'Wisokyburgh',\n      zipcode: '90566-7771',\n      geo: {\n        lat: '-43.9509',\n        lng: '-34.4618',\n      },\n    },\n    phone: '010-692-6593 x09125',\n    website: 'anastasia.net',\n    company: {\n      name: 'Deckow-Crist',\n      catchPhrase: 'Proactive didactic contingency',\n      bs: 'synergize scalable supply-chains',\n    },\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n    address: {\n      street: 'Douglas Extension',\n      suite: 'Suite 847',\n      city: 'McKenziehaven',\n      zipcode: '59590-4157',\n      geo: {\n        lat: '-68.6102',\n        lng: '-47.0653',\n      },\n    },\n    phone: '1-463-123-4447',\n    website: 'ramiro.info',\n    company: {\n      name: 'Romaguera-Jacobson',\n      catchPhrase: 'Face to face bifurcated interface',\n      bs: 'e-enable strategic applications',\n    },\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n    address: {\n      street: 'Hoeger Mall',\n      suite: 'Apt. 692',\n      city: 'South Elvis',\n      zipcode: '53919-4257',\n      geo: {\n        lat: '29.4572',\n        lng: '-164.2990',\n      },\n    },\n    phone: '493-170-9623 x156',\n    website: 'kale.biz',\n    company: {\n      name: 'Robel-Corkery',\n      catchPhrase: 'Multi-tiered zero tolerance productivity',\n      bs: 'transition cutting-edge web services',\n    },\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n    address: {\n      street: 'Skiles Walks',\n      suite: 'Suite 351',\n      city: 'Roscoeview',\n      zipcode: '33263',\n      geo: {\n        lat: '-31.8129',\n        lng: '62.5342',\n      },\n    },\n    phone: '(254)954-1289',\n    website: 'demarco.info',\n    company: {\n      name: 'Keebler LLC',\n      catchPhrase: 'User-centric fault-tolerant solution',\n      bs: 'revolutionize end-to-end systems',\n    },\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n    address: {\n      street: 'Norberto Crossing',\n      suite: 'Apt. 950',\n      city: 'South Christy',\n      zipcode: '23505-1337',\n      geo: {\n        lat: '-71.4197',\n        lng: '71.7478',\n      },\n    },\n    phone: '1-477-935-8478 x6430',\n    website: 'ola.org',\n    company: {\n      name: 'Considine-Lockman',\n      catchPhrase: 'Synchronised bottom-line interface',\n      bs: 'e-enable innovative applications',\n    },\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n    address: {\n      street: 'Rex Trail',\n      suite: 'Suite 280',\n      city: 'Howemouth',\n      zipcode: '58804-1099',\n      geo: {\n        lat: '24.8918',\n        lng: '21.8984',\n      },\n    },\n    phone: '210.067.6132',\n    website: 'elvis.io',\n    company: {\n      name: 'Johns Group',\n      catchPhrase: 'Configurable multimedia task-force',\n      bs: 'generate enterprise e-tailers',\n    },\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n    address: {\n      street: 'Ellsworth Summit',\n      suite: 'Suite 729',\n      city: 'Aliyaview',\n      zipcode: '45169',\n      geo: {\n        lat: '-14.3990',\n        lng: '-120.7677',\n      },\n    },\n    phone: '586.493.6943 x140',\n    website: 'jacynthe.com',\n    company: {\n      name: 'Abernathy Group',\n      catchPhrase: 'Implemented secondary concept',\n      bs: 'e-enable extensible e-tailers',\n    },\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n    address: {\n      street: 'Dayna Park',\n      suite: 'Suite 449',\n      city: 'Bartholomebury',\n      zipcode: '76495-3109',\n      geo: {\n        lat: '24.6463',\n        lng: '-168.8889',\n      },\n    },\n    phone: '(775)976-6794 x41206',\n    website: 'conrad.com',\n    company: {\n      name: 'Yost and Sons',\n      catchPhrase: 'Switchable contextually-based project',\n      bs: 'aggregate real-time technologies',\n    },\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n    address: {\n      street: 'Kattie Turnpike',\n      suite: 'Suite 198',\n      city: 'Lebsackbury',\n      zipcode: '31428-2261',\n      geo: {\n        lat: '-38.2386',\n        lng: '57.2232',\n      },\n    },\n    phone: '024-648-3804',\n    website: 'ambrose.net',\n    company: {\n      name: 'Hoeger LLC',\n      catchPhrase: 'Centralized empowering task-force',\n      bs: 'target end-to-end models',\n    },\n  },\n];\n\nexport default users;\n","/* eslint-disable max-len */\n\nconst todos = [\n  {\n    userId: 1,\n    id: 1,\n    title: 'delectus aut autem',\n    completed: false,\n  },\n  {\n    userId: 1,\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n  },\n];\n\nexport default todos;\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './Todo.css';\r\n\r\nexport const Todo = ({\r\n  userName,\r\n  todoTitle,\r\n  todoState,\r\n}) => {\r\n  return (\r\n    <>\r\n      <p>\r\n        {todoTitle}\r\n      </p>\r\n      <p>\r\n        <strong>Status: </strong>\r\n        {todoState ? 'Completed' : 'Not completed yet'}\r\n      </p>\r\n      <p className=\"user\">\r\n        {userName}\r\n      </p>\r\n    </>\r\n\r\n  )\r\n}\r\n\r\nTodo.propTypes = {\r\n  userName: PropTypes.string.isRequired,\r\n  todoTitle: PropTypes.string.isRequired,\r\n  todoState: PropTypes.bool.isRequired,\r\n}\r\n","import React from 'react';\r\nimport { Todo } from './Todo';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const TodoList = ({ todos }) => {\r\n  return (\r\n  <ul>\r\n    {todos.map(todo => (\r\n      <Todo\r\n        key={todo.id}\r\n        userName={todo.name}\r\n        todoTitle={todo.title}\r\n        todoState={todo.completed}\r\n      />\r\n    ))}\r\n  </ul>\r\n)}\r\n\r\nTodoList.propTypes = PropTypes.arrayOf(PropTypes.shape({\r\n  name: PropTypes.string.isRequired,\r\n  title: PropTypes.string.isRequired,\r\n  completed: PropTypes.bool.isRequired,\r\n  id: PropTypes.number.isRequired,\r\n  userId: PropTypes.number.isRequired,\r\n}).isRequired\r\n).isRequired;\r\n","import React from 'react';\r\n\r\nexport const InputForTitle = ({ onChange, value }) => (\r\n  <label>\r\n    <strong>\r\n      Title: \r\n    </strong>\r\n    <input\r\n      type='text'\r\n      maxLength='40'\r\n      required\r\n      name='todoTitle'\r\n      placeholder='title'\r\n      onChange={onChange}\r\n      value={value}\r\n    >\r\n  </input>\r\n  </label>\r\n\r\n)\r\n","import React from 'react';\r\n\r\nexport const AddButton = () => (\r\n  <button\r\n    type='submit'\r\n    name='addButton'\r\n  >\r\n    Add todo\r\n  </button>\r\n)\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const Option = ({ name }) => (\r\n  <option\r\n    value={name}\r\n  >\r\n    {name}\r\n  </option>\r\n)\r\n\r\nOption.propTypes = {\r\n  name: PropTypes.string.isRequired\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Option } from './Option';\r\n\r\nexport const SelectUser = ({\r\n  namesForOptions,\r\n  onChange,\r\n  valueForSelect\r\n}) => (\r\n  <select\r\n\r\n    name='userNames'\r\n    required\r\n    onChange={onChange}\r\n    value={valueForSelect}\r\n  >\r\n    <option\r\n      value=\"\"\r\n    >\r\n      Select user\r\n    </option>\r\n    {namesForOptions.map(name => \r\n      <Option\r\n      name={name}\r\n      key={name}\r\n      />\r\n    )}\r\n  </select>\r\n)\r\n\r\nSelectUser.propTypes = {\r\n  namesForOptions:\r\n    PropTypes.arrayOf(PropTypes.string.isRequired).isRequired,\r\n    onChange: PropTypes.func.isRequired,\r\n    valueForSelect: PropTypes.string.isRequired,\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { InputForTitle } from './InputForTitle';\r\nimport { AddButton } from './AddButton';\r\nimport { SelectUser } from './SelectUser';\r\nimport './FormToAddTodo.css';\r\n\r\nexport const FormToAddTodo = ({\r\n  onSubmit,\r\n  onChangeForInput,\r\n  onChangeForSelect,\r\n  namesForOptions,\r\n  valueForInput,\r\n  valueForSelect\r\n}) => (\r\n  <form\r\n    className='add-form'\r\n    onSubmit={onSubmit}\r\n  >\r\n    <InputForTitle\r\n      onChange={onChangeForInput}\r\n      value={valueForInput}\r\n    />\r\n    <SelectUser\r\n      valueForSelect={valueForSelect}\r\n      namesForOptions={namesForOptions}\r\n      onChange={onChangeForSelect}\r\n    />\r\n    <AddButton/>\r\n  </form>\r\n)\r\n\r\nFormToAddTodo.propTypes = {\r\n  onSubmit: PropTypes.func.isRequired,\r\n  onChangeForInput: PropTypes.func.isRequired,\r\n  onChangeForSelect: PropTypes.func.isRequired,\r\n  namesForOptions:\r\n    PropTypes.arrayOf(PropTypes.string.isRequired).isRequired,\r\n  valueForInput: PropTypes.string.isRequired,\r\n  valueForSelect: PropTypes.string.isRequired,\r\n}\r\n","import React, { Component } from 'react';\nimport './App.css';\nimport users from './api/users';\nimport todos from './api/todos';\nimport { TodoList } from './components/TodoList';\nimport { FormToAddTodo } from './components/FormToAddTodo';\n\nconst todosWithUsersName = todos.map(todo => {\n  const userName = users.find(user => user.id === todo.userId).name\n  const copyTodo = {\n    ...todo,\n    name: userName\n  };\n  return copyTodo;\n})\n\nconst namesForSelect = users.map(user => user.name)\n\nclass App extends Component {\n  state = {\n    todos: todosWithUsersName,\n    todoTitle:'',\n    userName: '',\n  }\n\nchangeTodoTitle = event => this.setState({\n  todoTitle: event.target.value.replace(/[^\\w]/g,''),\n})\n\nchangeUserNameAndUserId = event => this.setState({\n  userName: event.target.value,\n  userId: (namesForSelect.indexOf(event.target.value) + 1),\n})\n\nmakeNewTodo = (event) => {\n  event.preventDefault()\n\n  const newTodo = {\n    name: this.state.userName,\n    title: this.state.todoTitle,\n    completed: false,\n    userId: this.state.userId,\n    id: this.state.todos.length\n  }\n\n  this.setState(state => ({\n    todos: state.todos.concat(newTodo),\n    todoTitle: '',\n    userName: '',\n  }))\n}\n\n  render() {\n    const { todoTitle, todos, userName } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>Add todo form</h1>\n        <p>\n          <span>Users: </span>\n          {users.length}\n        </p>\n        <TodoList\n          todos={todos}\n        />\n        <FormToAddTodo\n          onSubmit={this.makeNewTodo}\n          onChangeForInput={this.changeTodoTitle}\n          onChangeForSelect={this.changeUserNameAndUserId}\n          namesForOptions={namesForSelect}\n          valueForInput={todoTitle}\n          valueForSelect={userName}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}